'use client'
"use strict";"use client";var d=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var p=(e,r)=>{for(var t in r)i(e,t,{get:r[t],enumerable:!0})},n=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of u(r))!g.call(e,o)&&o!==t&&i(e,o,{get:()=>r[o],enumerable:!(s=h(r,o))||s.enumerable});return e};var f=(e,r,t)=>(t=e!=null?d(b(e)):{},n(r||!e||!e.__esModule?i(t,"default",{value:e,enumerable:!0}):t,e)),z=e=>n(i({},"__esModule",{value:!0}),e);var w={};p(w,{ImageResizer:()=>y});module.exports=z(w);var l=require("@tiptap/react"),c=f(require("react-moveable"),1),m=require("react/jsx-runtime"),y=()=>{let{editor:e}=(0,l.useCurrentEditor)();if(!e?.isActive("image"))return null;let r=()=>{let t=document.querySelector(".ProseMirror-selectednode");if(t){let s=e.state.selection,o=e.commands.setImage;o({src:t.src,width:Number(t.style.width.replace("px","")),height:Number(t.style.height.replace("px",""))}),e.commands.setNodeSelection(s.from)}};return(0,m.jsx)(c.default,{target:document.querySelector(".ProseMirror-selectednode"),container:null,origin:!1,edge:!1,throttleDrag:0,keepRatio:!0,resizable:!0,throttleResize:0,onResize:({target:t,width:s,height:o,delta:a})=>{a[0]&&(t.style.width=`${s}px`),a[1]&&(t.style.height=`${o}px`)},onResizeEnd:()=>{r()},scalable:!0,throttleScale:0,renderDirections:["w","e"],onScale:({target:t,transform:s})=>{t.style.transform=s}})};0&&(module.exports={ImageResizer});
